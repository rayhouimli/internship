"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProjectComponents = void 0;
const tslib_1 = require("tslib");
class ProjectComponents {
    constructor(client) {
        this.client = client;
    }
    createComponent(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/rest/api/3/component',
                method: 'POST',
                data: {
                    self: parameters.self,
                    id: parameters.id,
                    name: parameters.name,
                    description: parameters.description,
                    lead: parameters.lead,
                    leadUserName: parameters.leadUserName,
                    leadAccountId: parameters.leadAccountId,
                    assigneeType: parameters.assigneeType,
                    assignee: parameters.assignee,
                    realAssigneeType: parameters.realAssigneeType,
                    realAssignee: parameters.realAssignee,
                    isAssigneeTypeValid: parameters.isAssigneeTypeValid,
                    project: parameters.project,
                    projectId: parameters.projectId,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getComponent(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/component/${parameters.id}`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    updateComponent(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/component/${parameters.id}`,
                method: 'PUT',
                data: {
                    name: parameters.name,
                    description: parameters.description,
                    leadUserName: parameters.leadUserName,
                    leadAccountId: parameters.leadAccountId,
                    assigneeType: parameters.assigneeType,
                    project: parameters.project,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    deleteComponent(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/component/${parameters.id}`,
                method: 'DELETE',
                params: {
                    moveIssuesTo: parameters.moveIssuesTo,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getComponentRelatedIssues(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/component/${parameters.id}/relatedIssueCounts`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getProjectComponentsPaginated(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/project/${parameters.projectIdOrKey}/component`,
                method: 'GET',
                params: {
                    startAt: parameters.startAt,
                    maxResults: parameters.maxResults,
                    orderBy: parameters.orderBy,
                    query: parameters.query,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getProjectComponents(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/project/${parameters.projectIdOrKey}/components`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.ProjectComponents = ProjectComponents;
//# sourceMappingURL=projectComponents.js.map